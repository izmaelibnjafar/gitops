apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-service
  labels:
    app.kubernetes.io/name: echo-service
    tags.datadoghq.com/env: test
    tags.datadoghq.com/service: echo-service
    tags.datadoghq.com/version: 1.3.0
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: echo-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echo-service
        tags.datadoghq.com/env: test
        tags.datadoghq.com/service: echo-service
        tags.datadoghq.com/version: 1.3.0
    spec:
      containers:
      - name: echo-service
        image: larsaifora/echo-service:1.3.0
        imagePullPolicy: IfNotPresent
        env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 0.01
            memory: 10Mi
          limits:
            cpu: 0.02
            memory: 10Mi
        livenessProbe:
          httpGet:
            path: /.well-known/health/alive
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - all
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
